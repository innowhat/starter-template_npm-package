name: Release

on:
    push:
        branches:
            - main

permissions:
    contents: write

jobs:
    detect-release:
        name: 🕵️ Detect version bump
        runs-on: ubuntu-latest
        outputs:
            release: ${{ steps.check.outputs.release }}
            version: ${{ steps.check.outputs.version }}
        steps:
            - name: 📦 Checkout repository
              uses: actions/checkout@v4

            - name: 🔍 Check if package.json version changed (with safety check)
              id: check
              run: |
                  git fetch origin main --depth=2 || true
                  PREV_VERSION=$(git show HEAD~1:package.json | jq -r .version 2>/dev/null || echo "")
                  CURR_VERSION=$(jq -r .version package.json)
                  echo "Previous: $PREV_VERSION"
                  echo "Current:  $CURR_VERSION"

                  # Check if package-lock.json changed in this commit
                  if git diff --name-only HEAD~1 HEAD | grep -q "^package-lock.json$"; then
                    LOCK_CHANGED=true
                  else
                    LOCK_CHANGED=false
                  fi

                  if [ "$PREV_VERSION" != "$CURR_VERSION" ] && [ -n "$CURR_VERSION" ] && [ "$LOCK_CHANGED" = true ]; then
                    echo "release=true" >> $GITHUB_OUTPUT
                    echo "version=$CURR_VERSION" >> $GITHUB_OUTPUT
                  else
                    echo "release=false" >> $GITHUB_OUTPUT
                  fi

    release:
        name: 🚀 Tag & Create GitHub Release
        runs-on: ubuntu-latest
        needs: detect-release
        if: needs.detect-release.outputs.release == 'true'
        steps:
            - name: 📦 Checkout repository
              uses: actions/checkout@v4

            - name: 🏷️ Create tag
              run: |
                  git config user.name "github-actions[bot]"
                  git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
                  git tag v${{ needs.detect-release.outputs.version }}
                  git push origin v${{ needs.detect-release.outputs.version }}

            - name: 🎯 Create GitHub release
              env:
                  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              run: |
                  gh release create v${{ needs.detect-release.outputs.version }} \
                    --repo="$GITHUB_REPOSITORY" \
                    --title="${{ needs.detect-release.outputs.version }}" \
                    --generate-notes

    publish-npm:
        name: 📦 Publish to NPM Registry
        runs-on: ubuntu-22.04
        needs: release
        steps:
            - name: 📦 Checkout repository
              uses: actions/checkout@v4

            - name: Use Node.js
              uses: actions/setup-node@v4
              with:
                  cache: 'npm'
                  node-version: 18.x
                  architecture: x64
                  registry-url: https://registry.npmjs.org/

            - name: Run NPM Install & Build
              run: npm ci && npm run build

            - name: 🚀 Publish to NPM
              run: npm publish --access public
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
